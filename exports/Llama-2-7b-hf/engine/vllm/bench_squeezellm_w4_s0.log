Namespace(backend='vllm', dataset='datasets/alpaca-cleaned/alpaca_data_cleaned.json', input_len=None, output_len=None, model='model/squeezellm/w4-s0', tokenizer='model/squeezellm/w4-s0', quantization='squeezellm', tensor_parallel_size=1, n=1, use_beam_search=False, num_prompts=1, seed=0, hf_max_batch_size=None, trust_remote_code=False, max_model_len=None, dtype='auto', enforce_eager=False)
WARNING 01-19 10:48:58 config.py:175] squeezellm quantization is not fully optimized yet. The speed can be slower than non-quantized models.
INFO 01-19 10:48:58 llm_engine.py:70] Initializing an LLM engine with config: model='model/squeezellm/w4-s0', tokenizer='model/squeezellm/w4-s0', tokenizer_mode=auto, revision=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=4096, download_dir=None, load_format=auto, tensor_parallel_size=1, quantization=squeezellm, enforce_eager=False, seed=0)
INFO 01-19 10:49:19 llm_engine.py:275] # GPU blocks: 3941, # CPU blocks: 512
INFO 01-19 10:49:20 model_runner.py:501] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 01-19 10:49:20 model_runner.py:505] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode.
INFO 01-19 10:49:38 model_runner.py:547] Graph capturing finished in 17 secs.
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.10s/it]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.10s/it]
Output: 
2 Given two populations, determine a logical threshold parameter using modeling techniques (i.e., empirical rule, histogram, frequency polygon, distribution curves).
3 Estimate the distribution of a continuous random variable using a model such as normal, log-normal, or log-logistic.
4 Given the basic properties of a continuous distribution function, calculate standard deviation and other measures such as "rms" or the percentiles of a continuous variable.
5 The functions of survival and inverse survival.
6 Construction and understand basic properties of 50/50 and (1-p) tables

Generated 1 requests in 1.10 seconds. (0.91 requests/s)
Generated 130 tokens in 1.10 seconds. (118.20 tokens/s)
